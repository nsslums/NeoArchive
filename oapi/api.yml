openapi: '3.0.3'
info:
  title: Hachimitu API
  version: '0.1.1'

paths:
  /series_list:
    get:
      summary: Get series list
      tags:
        - Series
      operationId: GetSeriesList
      parameters:
        - name: q
          in: query
          description: Search keyword
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Series'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'

  /series/{id}:
    delete:
      summary: Delete series
      tags:
        - Series
      operationId: DeleteSeries
      parameters:
        - name: id
          in: path
          description: Series ID
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /series:
    post:
      summary: Create series
      tags:
        - Series
      operationId: CreateSeries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Series'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Series'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      summary: Update series
      tags:
        - Series
      operationId: UpdateSeries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Series'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Series'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  
  /tag_list:
    get:
      summary: Get tag list
      tags:
        - Tag
      operationId: GetTagList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /tag/{id}:
    delete:
      summary: Delete tag
      tags:
        - Tag
      operationId: DeleteTag
      parameters:
        - name: id
          in: path
          description: Tag ID
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /tag:
    post:
      summary: Create tag
      tags:
        - Tag
      operationId: CreateTag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      summary: Update tag
      tags:
        - Tag
      operationId: UpdateTag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'

  /anime/season_list/{series_id}:
    get:
      summary: Get anime season list
      tags:
        - Anime season
      operationId: GetAnimeSeasonList
      parameters:
        - name: series_id
          in: path
          description: Series ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnimeSeason'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'

  /anime/season/{id}:
    delete:
      summary: Delete anime season
      tags:
        - Anime season
      operationId: DeleteAnimeSeason
      parameters:
        - name: id
          in: path
          description: Season ID
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /anime/season:
    post:
      summary: Create anime season
      tags:
        - Anime season
      operationId: CreateAnimeSeason
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimeSeason'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimeSeason'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      summary: Update anime season
      tags:
        - Anime season
      operationId: UpdateAnimeSeason
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimeSeason'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimeSeason'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'

  /anime/episode_list/{season_id}:
    get:
      summary: Get anime episode list
      tags:
        - Anime episode
      operationId: GetAnimeEpisodeList
      parameters:
        - name: season_id
          in: path
          description: Season ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnimeEpisode'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'

  /anime/episode/{id}:
    delete:
      summary: Delete anime episode
      tags:
        - Anime episode
      operationId: DeleteAnimeEpisode
      parameters:
        - name: id
          in: path
          description: Episode ID
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /anime/episode:
    post:
      summary: Create anime episode
      tags:
        - Anime episode
      operationId: CreateAnimeEpisode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimeEpisode'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimeEpisode'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      summary: Update anime episode
      tags:
        - Anime episode
      operationId: UpdateAnimeEpisode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimeEpisode'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimeEpisode'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  
  /video/{id}:
    get:
      summary: Get video
      tags:
        - Video
      operationId: GetVideo
      parameters:
        - name: id
          in: path
          description: Video ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      summary: Delete video
      tags:
        - Video
      operationId: DeleteVideo
      parameters:
        - name: id
          in: path
          description: Video ID
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'

  /video:
    post:
      summary: Create video
      tags:
        - Video
      operationId: CreateVideo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      summary: Update video
      tags:
        - Video
      operationId: UpdateVideo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  
  /video_log/{id}:
    get:
      summary: Get video log
      tags:
        - Video Log
      operationId: GetVideoLog
      parameters:
        - name: id
          in: path
          description: Video log ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoLog'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /video_log:
    post:
      summary: Create video log
      tags:
        - Video Log
      operationId: CreateVideoLog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoLog'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoLog'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'

components:
  schemas:
    Series:
      type: object
      properties:
        id:
          type: integer
          title: Series ID
        title:
          type: string
          title: title
        tags:
          type: array
          title: tags
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - id
        - title

    Tag:
      type: object
      properties:
        id:
          type: integer
          title: Tag ID
        name:
          type: string
          title: Tag name
      required:
        - id
        - name

    AnimeSeason:
      type: object
      properties:
        id:
          type: integer
          title: Season ID
        series_id:
          type: integer
          title: Series ID
        title:
          type: string
          title: title
        synopsis:
          type: string
          title: synopsis
        cours:
          type: string
          title: cours
        cast:
          type: string
          title: cast
        production:
          type: string
          title: production
      required:
        - id
        - series_id
        - title

    AnimeEpisode:
      type: object
      properties:
        id:
          type: integer
          title: Episode ID
        season_id:
          type: integer
          title: Season ID
        video_id:
          type: integer
          title: Video ID
        number:
          type: string
          title: Episode number
        subtitle:
          type: string
          title: Episode subtitle
      required:
        - id
        - season_id

    Video:
      type: object
      properties:
        id:
          type: integer
          title: Video ID
        broadcast_time:
          type: integer
          title: Broadcast time
        playback_time:
          type: integer
          title: Playback time
      required:
        - id

    VideoLog:
      type: object
      properties:
        id:
          type: integer
          title: Video log ID
        video_id:
          type: integer
          title: Video ID
        user_id:
          type: integer
          title: User ID
        playback_time:
          type: integer
          title: Playback time
      required:
        - id
        - video_id
        - user_id
        - playback_time

    DefaultErrorResponse:
      type: object
      properties:
        message:
          type: string
          title: Error message
